@model TravelTies.Areas.Customer.Models.TourDetailViewModel
@using System.Globalization
@using System.Security.Claims
@using Models.Models
@inject IHttpContextAccessor Accessor

@{
    ViewData["Title"] = Model.Tour.TourName;
    string FormatPrice(decimal p) => string.Format(CultureInfo.GetCultureInfo("vi-VN"), "{0:N0}đ", p);
    string FormatDateOnly(DateOnly d) => d.ToString("dd/MM/yyyy");
    var imageUrls = (Model.Tour.Picture ?? "").Split(',', StringSplitOptions.RemoveEmptyEntries);

    // Lấy userId từ Claims (ưu tiên chuẩn ASP.NET Core)
    Guid? currentUserId = null;
    var claimId = User.FindFirst(ClaimTypes.NameIdentifier)?.Value;
    if (Guid.TryParse(claimId, out var g)) currentUserId = g;

    // (tuỳ chọn) session user cũ nếu dự án bạn đang dùng
    var userString = Accessor.HttpContext.Session.GetString("CurrentUser");
    User currentUser = null;
    if (userString != null)
    {
        currentUser = System.Text.Json.JsonSerializer.Deserialize<User>(userString);
    }

    var tourId = Model.Tour.TourId;
    var tourPrice = Model.Tour.Price;

    // Rating của chính tôi (nếu có)
    var myRating = currentUserId.HasValue
        ? Model.Ratings.FirstOrDefault(r => r.UserId == currentUserId)
        : null;

    string RenderStars(int score)
    {
        // Trả về chuỗi ★/☆ (không dùng HTML để đơn giản)
        var full = new string('★', Math.Max(0, Math.Min(score, 5)));
        var empty = new string('☆', 5 - Math.Max(0, Math.Min(score, 5)));
        return full + empty;
    }
}

<section class="bg-muted/30 py-4">
    <div class="container mx-auto px-4 text-sm text-muted-foreground">
        <a asp-controller="Home" asp-action="Index" class="text-black hover:text-primary">Trang chủ</a>
        <span class="mx-2 text-black">/</span>
        <a asp-controller="Tour" asp-action="Index" class="text-black hover:text-primary">Tours</a>
        <span class="mx-2 text-black">/</span>
        <span class="font-medium text-black">@Model.Tour.TourName</span>
    </div>
</section>

<div class="container mx-auto px-4 py-8">
    <div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
        <!-- Left: Main content -->
        <div class="lg:col-span-2 space-y-6">
            <!-- Gallery -->
            <div class="relative rounded-2xl overflow-hidden h-96 w-full">
                @if (imageUrls.Length > 0)
                {
                    <div class="carousel h-full w-full">
                        @for (int i = 0; i < imageUrls.Length; i++)
                        {
                            <div id="slide@i" class="carousel-item relative h-full w-full flex justify-center items-center">
                                <!-- Blurred background -->
                                <div class="absolute inset-0">
                                    <img src="@imageUrls[i]" class="w-full h-full object-cover filter blur-xl scale-110"/>
                                </div>

                                <!-- Centered main image -->
                                <img src="@imageUrls[i]" class="relative max-w-full max-h-full object-contain rounded-2xl"/>

                                <!-- Navigation buttons -->
                                <div class="absolute flex justify-between transform -translate-y-1/2 left-5 right-5 top-1/2">
                                    <a href="#slide@(i == 0 ? imageUrls.Length - 1 : i - 1)" class="btn btn-circle">❮</a>
                                    <a href="#slide@((i + 1) % imageUrls.Length)" class="btn btn-circle">❯</a>
                                </div>
                            </div>
                        }
                    </div>
                }
                else
                {
                    <div class="w-full h-full relative">
                        <img src="~/images/no-image-bg.jpg" class="absolute inset-0 w-full h-full object-cover filter blur-xl scale-110"/>
                        <img src="~/images/no-image.png" class="relative w-full h-full object-contain rounded-2xl"/>
                    </div>
                }
            </div>

            <!-- Title & Meta -->
            <div class="space-y-4">
                <div class="flex items-start justify-between">
                    <div class="space-y-2">
                        <div class="flex items-center gap-2">
                            <span class="badge badge-secondary">@Model.Tour.Category</span>
                        </div>
                        <h1 class="text-3xl font-bold text-black">@Model.Tour.TourName</h1>
                        <div class="flex items-center gap-6 text-muted-foreground text-gray-700">
                            <div class="flex items-center gap-2"><i class="fas fa-map-marker-alt"></i> <span>@Model.Tour.Destination</span></div>
                            <div class="flex items-center gap-2"><i class="fas fa-clock"></i>
                                <span>@(Model.Tour.TourStartDate.ToString("dd/MM/yyyy"))</span></div>
                        </div>

                        <div class="flex items-center gap-3 mt-2">
                            <div class="flex items-center">
                                @for (int i = 1; i <= 5; i++)
                                {
                                    if (i <= Math.Floor(Model.AverageRating))
                                    {
                                        <svg class="w-4 h-4 fill-yellow-500 text-yellow-500">
                                            <use href="#star-solid"/>
                                        </svg>
                                    }
                                    else
                                    {
                                        <svg class="w-4 h-4 text-gray-700">
                                            <use href="#star-outline"/>
                                        </svg>
                                    }
                                }
                            </div>
                            <div class="font-medium text-black">@Model.AverageRating</div>
                            <div class="text-sm text-muted-foreground text-gray-700">(@Model.ReviewsCount đánh giá)</div>
                        </div>
                    </div>

                    <div class="flex items-center gap-2">
                        <a class="btn btn-ghost btn-sm" title="Yêu thích"><i class="far fa-heart"></i></a>
                        <a class="btn btn-ghost btn-sm" title="Chia sẻ"><i class="fas fa-share-alt"></i></a>
                    </div>
                </div>

                <p class="text-muted-foreground leading-relaxed text-black">@Model.Tour.Description</p>
            </div>

            <div class="container shadow-md hover:shadow-lg border-none rounded-md">
                <!-- Highlights -->
                <div class="card">
                    <div class="card-body">
                        <h3 class="text-lg font-semibold mb-3 text-black">Những trải nghiệm đặc biệt</h3>
                        <ul class="list-disc list-inside space-y-2 text-gray-700" style="list-style-type:none;">
                            @{
                                foreach (var hi in Model.Tour.About?.Split('\n') ?? Array.Empty<string>())
                                {
                                    if (!string.IsNullOrWhiteSpace(hi))
                                    {
                                        <li>@hi</li>;
                                    }
                                }
                            }
                        </ul>
                    </div>
                </div>

                <!-- Itinerary -->
                <div class="card">
                    <div class="card-body">
                        <h3 class="text-lg font-semibold mb-3 text-black">Lịch trình</h3>
                        <ul class="list-disc list-inside space-y-2 text-gray-700">
                            @{
                                foreach (var hi in Model.Tour.TourScheduleDescription?.Split(',') ?? Array.Empty<string>())
                                {
                                    if (!string.IsNullOrWhiteSpace(hi))
                                    {
                                        <li>@hi</li>;
                                    }
                                }
                            }
                        </ul>
                    </div>
                </div>

                <!-- Policies -->
                <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                    <div class="card">
                        <div class="card-body">
                            <h4 class="font-semibold mb-2 text-black">Bao gồm</h4>
                            <ul class="list-disc list-inside text-sm text-green-700" style="list-style-type:none;">
                                <li><i class="fa-solid fa-check"></i> Xe vận chuyển đời mới</li>
                                <li><i class="fa-solid fa-check"></i> Hướng dẫn viên</li>
                                <li><i class="fa-solid fa-check"></i> Vé tham quan theo chương trình</li>
                            </ul>
                        </div>
                    </div>

                    <div class="card">
                        <div class="card-body">
                            <h4 class="font-semibold mb-2 text-black">Không bao gồm</h4>
                            <ul class="list-disc list-inside text-sm text-red-600" style="list-style-type:none;">
                                <li><i class="fa-solid fa-xmark"></i> Chi phí cá nhân</li>
                                <li><i class="fa-solid fa-xmark"></i> Đồ uống có cồn</li>
                            </ul>
                        </div>
                    </div>
                </div>

                <div class="card">
                    <div class="card-body">
                        <h3 class="text-lg font-semibold mb-3 text-black">Chính sách</h3>
                        <ul class="list-disc list-inside space-y-2 text-blue-500" style="list-style-type:none;">
                            <li>Yêu cầu đặt trước 14 ngày</li>
                            <li>Huỷ tour trước 7 ngày: Hoàn 50% phí</li>
                            <li>Không hoàn phí nếu huỷ trong 7 ngày</li>
                            <li>Phụ thu cuối tuần và lễ tết</li>
                            <li>Dress code: Smart casual cho dinner</li>
                        </ul>
                    </div>
                </div>
            </div>

            <!-- Reviews -->
            <div class="space-y-4">
                <h3 class="text-2xl font-bold text-black">Đánh giá từ khách hàng (@Model.ReviewsCount)</h3>

                @if (TempData["RatingError"] != null)
                {
                    <div class="alert alert-error">@TempData["RatingError"]</div>
                }

                @if (!Model.Ratings.Any())
                {
                    <div class="text-sm text-gray-700">Chưa có bình luận nào.</div>
                }
                else
                {
                    foreach (var r in Model.Ratings)
                    {
                        var isMyComment = currentUserId.HasValue && r.UserId == currentUserId;
                        <div class="card">
                            <div class="card-body">
                                <div class="flex items-start gap-4">
                                    <div class="avatar">
                                        <div class="w-12 h-12 rounded-full bg-gray-100 overflow-hidden flex items-center justify-center text-xl text-black">
                                            @if (!string.IsNullOrWhiteSpace(r?.User?.UserAvatar))
                                            {
                                                <img src="@r.User.UserAvatar" alt="avatar" class="w-full h-full object-cover"/>
                                            }
                                            else
                                            {
                                                @((r?.User != null && !string.IsNullOrEmpty(r.User.UserName)) ? r.User.UserName[0].ToString() : "U")
                                            }
                                        </div>
                                    </div>
                                    <div class="flex-1">
                                        <div class="flex items-center justify-between">
                                            <div>
                                                <div class="font-medium text-black">@r.User?.UserName</div>
                                                <div class="text-sm text-muted-foreground text-gray-500">@r.CommentDate.ToLocalTime().ToString("dd/MM/yyyy HH:mm")</div>
                                            </div>
                                            <div class="text-right">
                                                <div class="font-bold text-yellow-600">@RenderStars(r.Score)</div>
                                            </div>
                                        </div>

                                        @if (!string.IsNullOrWhiteSpace(r.Comment))
                                        {
                                            <p class="mt-2 text-sm text-gray-700 whitespace-pre-wrap">@r.Comment</p>
                                        }

                                        @* Nút sửa/xoá chỉ hiện với chủ bình luận *@
                                        @if (isMyComment)
                                        {
                                            <details class="mt-3">
                                                <summary class="cursor-pointer text-sm text-blue-600">Chỉnh sửa bình luận</summary>
                                                <div class="mt-2">
                                                    <form method="post" asp-action="EditRating" class="space-y-2">
                                                        @Html.AntiForgeryToken()
                                                        <input type="hidden" name="tourId" value="@Model.Tour.TourId"/>
                                                        <input type="hidden" name="ratingId" value="@r.RatingId"/>

                                                        <label class="block text-xs text-gray-600">Số sao</label>
                                                        <select name="score" class="select select-bordered bg-white text-black" required>
                                                            @for (int s = 5; s >= 1; s--)
                                                            {
                                                                <option value="@s" selected="@(s == r.Score)">@s</option>
                                                            }
                                                        </select>

                                                        <label class="block text-xs text-gray-600">Bình luận</label>
                                                        <textarea name="comment" rows="3" maxlength="2000" class="textarea textarea-bordered w-full bg-white text-black">@r.Comment</textarea>

                                                        <div class="flex items-center gap-2">
                                                            <button type="submit" class="btn btn-primary btn-sm">Lưu</button>

                                                            <form method="post" asp-action="DeleteRating" onsubmit="return confirm('Xoá bình luận của bạn?');">
                                                                @Html.AntiForgeryToken()
                                                                <input type="hidden" name="tourId" value="@Model.Tour.TourId"/>
                                                                <input type="hidden" name="ratingId" value="@r.RatingId"/>
                                                                <button type="submit" class="btn btn-outline btn-error btn-sm">Xoá</button>

                                                            </form>
                                                        </div>
                                                    </form>
                                                </div>
                                            </details>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                }
            </div>
        </div>

        <!-- Right: Booking + price + rating form -->
        <div>
            <div class="sticky top-8 space-y-4 mx-4 border-1 border-black rounded-xl">
                <div class="card">
                    <div class="card-body">
                        <div class="flex items-center justify-between">
                            <div>
                                <div class="text-3xl font-bold text-blue-600">@FormatPrice(Model.Tour.Price)</div>
                                <div class="text-sm text-gray-700">Giá cho 1 người</div>
                            </div>
                            @if (Model.Tour.Discount > 0)
                            {
                                <span class="badge badge-accent">Giảm @Model.Tour.Discount %</span>
                            }
                        </div>

                        @if (Model.IsAuthenticated)
                        {
                            <!-- Visible inputs: user picks date & quantity and sees total -->
                            <div class="mt-4">
                                <div class="form-control mb-3">
                                    <label class="label"><span class="label-text text-black">Ngày khởi hành</span></label>
                                    <input id="departureDate" type="date"
                                           name="departureDate"
                                           class="input input-bordered w-full bg-white text-black"
                                           required
                                           min="@Model.Tour.TourStartDate.ToString("yyyy-MM-dd")"
                                           max="@Model.Tour.TourEndDate.ToString("yyyy-MM-dd")"/>
                                </div>

                                <div class="form-control mb-3">
                                    <label class="label"><span class="label-text text-black">Số người</span></label>
                                    <select name="quantity" id="quantity" class="select select-bordered w-full bg-white text-black">
                                        @for (int i = 1; i <= Math.Max(1, Model.RemainingTickets); i++)
                                        {
                                            <option value="@i">@i người</option>
                                        }
                                    </select>
                                </div>

                                <div class="form-control mb-3">
                                    <label class="label"><span class="label-text text-black">Tổng tiền</span></label>
                                    <input type="text" id="totalMoney" class="input input-bordered w-full bg-white text-black" readonly/>
                                </div>

                                <!-- Button opens modal after client-side validation -->
                                <button id="openBookingBtn" type="button" class="btn btn-primary w-full">Đặt tour</button>
                            </div>
                        }
                        else
                        {
                            <a asp-area="Identity" asp-page="/Account/Login" class="btn btn-primary w-full mt-4">Đăng nhập để đặt tour</a>
                        }

                        <div class="divider my-4"></div>
                        <div class="text-sm text-muted-foreground">
                            <div class="flex items-center gap-2 text-black"><i class="fas fa-shield-alt"></i> Thanh toán an toàn</div>
                            <div class="flex items-center gap-2 mt-1 text-black"><i class="fas fa-award"></i> Đảm bảo chất lượng</div>
                        </div>
                    </div>
                </div>

                <!-- Modal (daisyUI) -->
                <input type="checkbox" id="confirm-modal" class="modal-toggle"/>
                <div class="modal">
                    <div class="modal-box max-w-lg">
                        <h3 class="font-bold text-lg">Xác nhận đặt tour</h3>

                        <form id="confirmBookingForm" method="post" asp-controller="Booking" asp-action="AddToCart" class="mt-4">
                            @Html.AntiForgeryToken()
                            <!-- Hidden fields populated by JS -->
                            <input type="hidden" name="tourId" id="modal_tourId" value="@tourId"/>
                            <input type="hidden" name="tourDate" id="modal_tourDate"/>
                            <input type="hidden" name="quantity" id="modal_quantity"/>
                            <input type="hidden" name="ticketPrice" id="modal_ticketPrice"/>

                            <div class="mb-3">
                                <label class="label"><span class="label-text">Ngày khởi hành</span></label>
                                <input type="text" id="modal_displayDate" class="input input-bordered w-full" readonly/>
                            </div>

                            <div class="mb-3">
                                <label class="label"><span class="label-text">Số người</span></label>
                                <input type="text" id="modal_displayQuantity" class="input input-bordered w-full" readonly/>
                            </div>

                            <div class="mb-3">
                                <label class="label"><span class="label-text">Tổng tiền</span></label>
                                <input type="text" id="modal_displayTotal" class="input input-bordered w-full" readonly/>
                            </div>

                            <div class="form-control mb-3">
                                <label class="label"><span class="label-text">Họ và tên</span></label>
                                <input name="owner" id="modal_owner" required class="input input-bordered w-full" placeholder="Nguyễn Văn A"/>
                            </div>

                            <div class="form-control mb-3">
                                <label class="label"><span class="label-text">Số điện thoại</span></label>
                                <input name="phoneNumber" id="modal_phone" required pattern="^\d{7,11}$" class="input input-bordered w-full"
                                       placeholder="0912345678"/>
                                <label class="label"><span class="label-text-alt text-sm">Tối đa 11 chữ số, chỉ nhập số</span></label>
                            </div>

                            <div class="modal-action">
                                <button type="button" id="cancelModalBtn" class="btn btn-ghost">Hủy</button>
                                <button type="submit" class="btn btn-primary">Xác nhận & tạo vé</button>
                            </div>
                        </form>
                    </div>
                </div>

                @* Rating form (bên phải): chỉ hiện nếu đã đăng nhập *@
                @if (Model.IsAuthenticated)
                {
                    @* Nếu người dùng đủ điều kiện đánh giá *@
                    @if (Model.CanRate)
                    {
                        <div class="card">
                            <div class="card-body">
                                <h4 class="text-lg font-semibold text-blue-500">Đánh giá tour</h4>

                                @if (myRating == null)
                                {
                                    <!-- Tạo mới -->
                                    <form asp-action="SubmitRating" method="post" class="space-y-3">
                                        @Html.AntiForgeryToken()
                                        <input type="hidden" name="tourId" value="@Model.Tour.TourId"/>
                                        <div>
                                            <label class="label"><span class="label-text text-gray-700">Số sao (1-5)</span></label>
                                            <select name="score" class="select select-bordered w-full bg-white text-black" required>
                                                <option value="">Chọn</option>
                                                <option value="5">5 - Tuyệt vời</option>
                                                <option value="4">4 - Rất tốt</option>
                                                <option value="3">3 - Tốt</option>
                                                <option value="2">2 - Trung bình</option>
                                                <option value="1">1 - Kém</option>
                                            </select>
                                        </div>

                                        <div>
                                            <label class="label"><span class="label-text text-gray-700">Bình luận</span></label>
                                            <textarea name="comment" class="textarea textarea-bordered w-full bg-white text-black" rows="4"
                                                      placeholder="Chia sẻ trải nghiệm của bạn (tối đa 2000 ký tự)"></textarea>
                                        </div>

                                        <button type="submit" class="btn btn-secondary w-full">Gửi đánh giá</button>
                                    </form>
                                }
                                else
                                {
                                    <!-- Sửa/Xoá -->
                                    <div class="mb-2 text-sm text-gray-700">
                                        Bạn đã đánh giá: <strong class="text-yellow-600">@RenderStars(myRating.Score)</strong>
                                    </div>

                                    <form asp-action="EditRating" method="post" class="space-y-3">
                                        @Html.AntiForgeryToken()
                                        <input type="hidden" name="tourId" value="@Model.Tour.TourId" />
                                        <input type="hidden" name="ratingId" value="@myRating.RatingId" />

                                        <div>
                                            <label class="label"><span class="label-text text-gray-700">Số sao (1-5)</span></label>
                                            <select name="score" class="select select-bordered w-full bg-white text-black" required>
                                                @for (int s = 5; s >= 1; s--)
                                                {
                                                    <option value="@s" selected="@(s == myRating.Score)">@s</option>
                                                }
                                            </select>
                                        </div>

                                        <div>
                                            <label class="label"><span class="label-text text-gray-700">Bình luận</span></label>
                                            <textarea name="comment" class="textarea textarea-bordered w-full bg-white text-black" rows="4">@myRating.Comment</textarea>
                                        </div>

                                        <div class="flex gap-2">
                                            <button type="submit" class="btn btn-primary btn-sm">Lưu</button>

                                            <!-- form xoá tách riêng, không lồng -->
                                            <form asp-action="DeleteRating" method="post" onsubmit="return confirm('Xoá bình luận của bạn?');">
                                                @Html.AntiForgeryToken()
                                                <input type="hidden" name="tourId" value="@Model.Tour.TourId" />
                                                <input type="hidden" name="ratingId" value="@myRating.RatingId" />
                                                <button type="submit" class="btn btn-outline btn-error btn-sm">Xoá</button>
                                            </form>
                                        </div>
                                    </form>
                                }

                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="card">
                            <div class="card-body text-sm text-muted-foreground text-gray-700">
                                Bạn chỉ có thể đánh giá tour này sau khi đã mua vé và thanh toán.
                            </div>
                        </div>
                    }
                }
            </div>
        </div>
    </div>
</div>

<!-- Minimal svg icons used above -->
<svg style="display:none">
    <symbol id="star-solid" viewBox="0 0 20 20">
        <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.286 3.966a1 1 0 00.95.69h4.178c.969 0 1.371 1.24.588 1.81l-3.39 2.462a1 1 0 00-.364 1.118l1.286 3.966c.3.921-.755 1.688-1.54 1.118L10 13.347l-3.39 2.462c-.784.57-1.84-.197-1.54-1.118l1.286-3.966a1 1 0 00-.364-1.118L2.602 9.393c-.783-.57-.38-1.81.588-1.81h4.178a1 1 0 00.95-.69l1.286-3.966z"/>
    </symbol>
    <symbol id="star-outline" viewBox="0 0 24 24">
        <path d="M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.286 3.966a1 1 0 00.95.69h4.178c.969 0 1.371 1.24.588 1.81l-3.39 2.462a1 1 0 00-.364 1.118l1.286 3.966c.3.921-.755 1.688-1.54 1.118L12 17.347l-3.39 2.462c-.784.57-1.84-.197-1.54-1.118l1.286-3.966a1 1 0 00-.364-1.118L2.602 9.393c-.783-.57-.38-1.81.588-1.81h4.178a1 1 0 00.95-.69l1.286-3.966z"
              stroke="currentColor" stroke-width="1" fill="none"/>
    </symbol>
</svg>

<script>
    const quantitySelect = document.getElementById('quantity');
    const totalMoneyInput = document.getElementById('totalMoney');
    const tourPrice = @Model.Tour.Price;

    function updateTotal() {
        const quantity = parseInt(quantitySelect.value);
        const total = quantity * tourPrice;
        totalMoneyInput.value = total.toLocaleString('vi-VN', {style: 'currency', currency: 'VND'});
    }

    if (quantitySelect && totalMoneyInput) {
        updateTotal();
        quantitySelect.addEventListener('change', updateTotal);
    }
</script>

@section Scripts {
    <script>
        (function () {
            const quantitySelect = document.getElementById('quantity');
            const totalMoneyInput = document.getElementById('totalMoney');
            const departureDateInput = document.getElementById('departureDate');
            const openBtn = document.getElementById('openBookingBtn');

            const modalCheckbox = document.getElementById('confirm-modal');
            const modal_tourDate = document.getElementById('modal_tourDate');
            const modal_quantity = document.getElementById('modal_quantity');
            const modal_ticketPrice = document.getElementById('modal_ticketPrice');
            const modal_displayDate = document.getElementById('modal_displayDate');
            const modal_displayQuantity = document.getElementById('modal_displayQuantity');
            const modal_displayTotal = document.getElementById('modal_displayTotal');
            const cancelModalBtn = document.getElementById('cancelModalBtn');

            const tourPrice = @Model.Tour.Price;

            function formatCurrency(num) {
                return num.toLocaleString('vi-VN', {style: 'currency', currency: 'VND'});
            }

            function updateTotal() {
                if (!quantitySelect || !totalMoneyInput) return;
                const qty = parseInt(quantitySelect.value || '1', 10);
                const total = qty * tourPrice;
                totalMoneyInput.value = formatCurrency(total);
            }

            updateTotal();
            if (quantitySelect) quantitySelect.addEventListener('change', updateTotal);

            if (openBtn) {
                openBtn.addEventListener('click', function () {
                    const dateVal = departureDateInput.value;
                    const qty = parseInt(quantitySelect.value || '1', 10);

                    if (!dateVal) {
                        alert('Vui lòng chọn ngày khởi hành.');
                        return;
                    }

                    const min = new Date(departureDateInput.min);
                    const max = new Date(departureDateInput.max);
                    const chosen = new Date(dateVal);
                    if (chosen < min || chosen > max) {
                        alert('Ngày khởi hành không hợp lệ.');
                        return;
                    }

                    if (qty < 1) {
                        alert('Số lượng phải >= 1');
                        return;
                    }

                    const total = qty * tourPrice;

                    modal_tourDate.value = dateVal;
                    modal_quantity.value = qty;
                    modal_ticketPrice.value = total;

                    modal_displayDate.value = new Date(dateVal).toLocaleDateString('vi-VN');
                    modal_displayQuantity.value = qty + ' người';
                    modal_displayTotal.value = formatCurrency(total);

                    modalCheckbox.checked = true;
                });
            }

            if (cancelModalBtn) {
                cancelModalBtn.addEventListener('click', function () {
                    modalCheckbox.checked = false;
                });
            }
        })();
    </script>
}
